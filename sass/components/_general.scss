@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media screen and #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

body {
  font-family: map-get($fonts, 'main');
  font-size: 14px;
  color: map-get($colors, 'description');
  background-color: map-get($colors, 'light');
}

h1,
h2,
h3,
p,
ul {
  margin: 0;
  padding: 0;
}

.container {
  margin-left: auto;
  margin-right: auto;
  padding-left: 15px;
  padding-right: 15px;
  @include respond-to('mobile') {
    width: 480px;
  }
  @include respond-to('tablet') {
    width: 768px;
  }
  @include respond-to('desktop') {
    width: 1200px;
  }
}

%list-style {
  list-style-type: none;
}

.section {
  padding-top: 60px;
  padding-bottom: 60px;
  @include respond-to('desktop') {
    padding-top: 94px;
    padding-bottom: 94px;
  }
}

%centered {
  display: flex;
  align-items: center;
  justify-content: center;
}

%visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

%titles {
  margin-bottom: 30px;
  font-weight: 700;
  font-size: 28px;
  line-height: 1.17;
  text-align: center;
  letter-spacing: 0.03em;
  color: map-get($colors, 'nav');
}
